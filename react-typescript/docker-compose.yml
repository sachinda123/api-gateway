version: "3.5"
services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - 3002:3001
    volumes:
      - ./backend:/home/app
    working_dir: /home/app
    environment:
      - DEBUG=Auth
      - NODE_ENV=${NODE_ENV}
    # command: sh -c "npm install && nodemon -L ."
    command: sh -c "npm install &&  npm run dev  ."
    # command: sh -c "npm install &&  npx sequelize-cli db:migrate &&  npx sequelize-cli db:seed:all && npm run dev  ."
    # command: sh -c "npm install && npm run build && pm2 start dist/index.js && pm2 logs"
    networks:
      network_default:
  mysql:
    container_name: mysql-container
    image: mysql:5.7.42
    restart: always
    privileged: true
    environment:
      - MYSQL_DATABASE=${MYSQL_DB}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_USER_PASSWORD=${MYSQL_USER_PASSWORD}
      - MYSQL_DB_HOST=${MYSQL_DB_HOST}
      - MYSQL_DB_PORT=4406
    ports:
      - "4452:3306"
    volumes:
      - movie_data:/var/lib/mysql
    networks:
      network_default:
  phpmyadmin:
    container_name: mysql-phpmyadmin
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - PMA_HOST=mysql
    ports:
      - "44067:80"
    networks:
      network_default:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/home/app
    working_dir: /home/app
    environment:
      - DEBUG=Auth
      - NODE_ENV=${NODE_ENV}
    command: sh -c "npm install && npm start "
    networks:
      network_default:

volumes:
  movie_data:
networks:
  network_default:
    name: network_default
